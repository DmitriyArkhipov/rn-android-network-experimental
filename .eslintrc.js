module.exports = {
  root: true,
  env: {
      es2021: true,
      node: true,
  },
  extends: [
      '@react-native',
      'airbnb',
      'airbnb-typescript',
      'plugin:prettier/recommended',
      'plugin:@tanstack/eslint-plugin-query/recommended',
      '@feature-sliced/eslint-config/rules/layers-slices',
  ],
  parser: '@typescript-eslint/parser',
  plugins: ['react-native', '@typescript-eslint', 'react-hooks', 'simple-import-sort', 'import'],
  rules: {
      // until FSD problems solves
      'boundaries/element-types': 'warn',
      '@typescript-eslint/no-shadow': 2,
      '@typescript-eslint/consistent-type-imports': [2, { fixStyle: 'inline-type-imports' }],
      'react/jsx-newline': [2, { prevent: true }],
      'comma-dangle': [2, 'always-multiline'],
      '@typescript-eslint/ban-ts-comment': 2,
      'no-nested-ternary': 2,
      'no-console': [2, { allow: ['warn', 'error'] }],
      'import/extensions': 0,
      'react-hooks/exhaustive-deps': 1,
      'simple-import-sort/exports': 1,
      '@typescript-eslint/naming-convention': 1,
      'react/no-array-index-key': 1,
      'simple-import-sort/imports': [
          'warn',
          {
              groups: [
                  ['^react', '^@?\\w'],
                  ['^\\u0000'],
                  ['^(utils|hooks|views|constants|form-kit)(/.*|$)'],
                  ['^\\u0000'],
                  ['^(@/app)(/.*|$)'],
                  ['^\\u0000'],
                  ['^(@/pages)(/.*|$)'],
                  ['^\\u0000'],
                  ['^(@/widgets)(/.*|$)'],
                  ['^\\u0000'],
                  ['^(@/features)(/.*|$)'],
                  ['^\\u0000'],
                  ['^(@/entities)(/.*|$)'],
                  ['^\\u0000'],
                  ['^(@/shared)(/.*|$)'],
                  ['^\\u0000'],
                  ['^(@/navigation)(/.*|$)'],
                  ['^\\u0000'],
                  ['^(@/non-fsd)(/.*|$)'],
                  ['^\\u0000'],
                  ['^\\.\\.(?!/?$)', '^\\.\\./?$'],
                  ['^\\./(?=.*/)(?!/?$)', '^\\.(?!/?$)', '^\\./?$'],
              ],
          },
      ],
      '@typescript-eslint/no-use-before-define': [0],
      'react/function-component-definition': 0,
      '@tanstack/query/exhaustive-deps': 0,
      'react/require-default-props': 0,
      'no-undef': 0,
      'no-shadow': 0,
      'react/jsx-props-no-spreading': 0,
      'import/prefer-default-export': 0,
      'no-promise-executor-return': 0,
      'consistent-return': 0,
      'class-methods-use-this': 0,
      'no-plusplus': 0,
      'import/no-extraneous-dependencies': ['error', { devDependencies: true }],
      '@typescript-eslint/no-unused-vars': [
          'error',
          {
              argsIgnorePattern: '^_',
              varsIgnorePattern: '^_',
              destructuredArrayIgnorePattern: '^_',
          },
      ],

      'padding-line-between-statements': [2, { blankLine: 'always', prev: '*', next: 'return' }],
      curly: [2, 'all'],
      'global-require': [0],
      'no-underscore-dangle': [0],
      'react/jsx-no-useless-fragment': [0],
      'require-await': 'off',
      '@typescript-eslint/require-await': 'error',
      'jsx-a11y/anchor-is-valid': 'off',
      'no-param-reassign': ['error', { props: true, ignorePropertyModificationsFor: ['state', 'headers'] }],
      'react-native/no-unused-styles': 'error',
      'no-continue': [0],
  },
  overrides: [
      {
          files: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(spec|test).[jt]s?(x)'],
          extends: ['plugin:testing-library/react'],
      },
  ],
  parserOptions: {
      ecmaVersion: 2023,
      sourceType: 'module',
      project: './tsconfig.json',
  },
  settings: {
      'import/resolver': {
          node: {
              extensions: ['.js', '.ts', '.tsx'],
          },
          typescript: {
              alwaysTryTypes: true,
          },
      },
      'import/extensions': ['.js', '.ts', '.tsx'],
      'import/parsers': {
          '@typescript-eslint/parser': ['.ts', '.tsx'],
      },
      react: {
          pragma: 'React',
          version: 'detect',
      },
  },
};
